Техническое Задание (ТЗ) на разработку платформы онлайн-школы с AI-интеграцией
Версия: 1.0
Дата: 3 июля 2025 г.
1. Введение и общая информация
1.1. Название проекта
Платформа для онлайн-школы с AI-интеграцией (далее — «Платформа»).
1.2. Цели проекта
Создать современную, удобную, масштабируемую и безопасную образовательную платформу для онлайн-обучения с глубокой интеграцией инструментов на базе искусственного интеллекта для персонализации учебного процесса и автоматизации рутинных задач.
●	Краткосрочная цель (1-й год): Запустить MVP и ключевой функционал LMS, привлечь первую базу студентов, протестировать и отладить образовательные программы на основе обратной связи. Платформа должна быть ориентирована на российский рынок с поддержкой русского и английского языков.
●	Долгосрочная цель (3 года): Развить платформу в международную образовательную экосистему с широким спектром курсов, поддержкой различных образовательных стандартов (IB, A-Levels и др.), корпоративным обучением и инновационными форматами (VR/AR, геймификация).
1.3. Целевая аудитория
●	Студенты: Начинающие и продвинутые специалисты, желающие получить навыки в IT, бизнесе, цифровых технологиях и личностном развитии. В будущем — школьники, абитуриенты и сотрудники корпоративных клиентов.
●	Преподаватели / Кураторы: Эксперты в своих областях, создающие и ведущие курсы, проверяющие задания и поддерживающие студентов.
●	Администраторы: Сотрудники школы, управляющие контентом, пользователями, финансами и операционной деятельностью платформы.
2. Глоссарий
●	Платформа: Весь программный комплекс, включая публичный сайт, личные кабинеты и административную панель.
●	LMS (Learning Management System): Система управления обучением. Ядро платформы, отвечающее за курсы, уроки, тесты и отслеживание прогресса.
●	AI-ассистент: Чат-бот на базе языковой модели (OpenAI API), интегрированный в платформу для поддержки студентов.
●	CMS (Content Management System): Система управления контентом, часть административной панели для управления статичными страницами, новостями и т.д.
●	MVP (Minimum Viable Product): Минимально жизнеспособный продукт, первая версия платформы с базовым функционалом.
3. Общие технические требования
3.1. Стек технологий
●	Фронтенд:
○	Фреймворк: React.js с использованием Next.js для Server-Side Rendering (SSR) и SEO-оптимизации.
○	Язык: TypeScript.
○	Управление состоянием: Redux Toolkit / Zustand (на выбор разработчика с обоснованием).
○	UI-библиотека: Tailwind CSS для гибкой и быстрой разработки адаптивных интерфейсов.
●	Бэкенд:
○	Фреймворк: Node.js (NestJS) или Python (Django). Выбор должен быть обоснован разработчиком исходя из опыта и требований к скорости разработки и производительности AI-модулей. NestJS предпочтителен для типизированной и структурированной разработки.
○	Архитектура API: RESTful. Все эндпоинты должны быть документированы с использованием Swagger/OpenAPI.
●	База данных:
○	Основная: PostgreSQL (для реляционных данных: пользователи, курсы, платежи, прогресс).
○	Дополнительная: MongoDB или аналогичная NoSQL БД (для хранения логов, данных для анализа поведения, и результатов работы AI).
●	Видео-контент:
○	Рекомендация: Не хранить видео на собственном сервере. Использовать специализированный видеохостинг (Vimeo, Bunny.net или аналогичный), предоставляющий API для защиты видео (ограничение по домену) и адаптивный стриминг (HLS/DASH) для быстрой загрузки при любой скорости интернета. Плеер должен быть кастомизируемым и интегрированным в интерфейс урока. Это надежнее и эффективнее, чем использование простого MP4.
3.2. Инфраструктура и DevOps
●	Хостинг: Облачный сервис (Yandex.Cloud, AWS, Google Cloud). Выбор должен учитывать требования ФЗ-152.
●	CI/CD: Настройка автоматизированных процессов сборки, тестирования и развертывания (например, через GitHub Actions или GitLab CI).
●	Контейнеризация: Приложение должно быть полностью контейнеризировано с использованием Docker и Docker Compose для удобства развертывания и масштабирования.
●	CDN (Content Delivery Network): Использование CDN для быстрой доставки статического контента (изображения, стили, скрипты) по всему миру, с фокусом на Россию и СНГ.
3.3. Безопасность
●	SSL: Весь трафик должен передаваться по протоколу HTTPS.
●	Аутентификация: Двухфакторная аутентификация (2FA) для всех ролей пользователей (особенно для администраторов и преподавателей).
●	Пароли: Хранение паролей в хэшированном виде с использованием bcrypt (salt+hash).
●	Защита данных: Полное соответствие требованиям ФЗ-152 «О персональных данных» (хранение данных российских пользователей на серверах в РФ) и GDPR.
●	Защита от атак: Базовая защита от распространенных уязвимостей (XSS, CSRF, SQL-инъекции), использование WAF (Web Application Firewall).
3.4. Производительность и доступность
●	Скорость загрузки: Страницы не должны загружаться дольше 3 секунд. Показатель Google PageSpeed Insights LCP (Largest Contentful Paint) < 2.5 сек.
●	Время отклика сервера: Среднее время отклика API не должно превышать 200 мс под средней нагрузкой.
●	Нагрузоустойчивость: Платформа должна выдерживать нагрузку до 10 000 одновременных сессий пользователей на этапе запуска (требуется нагрузочное тестирование).
●	Доступность: Интерфейс должен соответствовать стандартам WCAG 2.1 (уровень AA).
●	Кроссбраузерность: Корректная работа в последних версиях Chrome, Firefox, Safari, Edge.
4. Функциональные требования
4.1. Роли пользователей
1.	Студент: Зарегистрированный пользователь, имеющий доступ к купленным курсам.
2.	Преподаватель / Куратор: Пользователь с расширенными правами, может создавать/редактировать свои курсы, управлять студентами на курсе, проверять ДЗ.
3.	Администратор: Полный доступ ко всем функциям платформы.
4.2. Общедоступный блок (Публичный сайт)
●	Главная страница:
○	Привлекательный баннер с CTA (призыв к действию).
○	Блоки: "О школе", "Преимущества", "Популярные курсы", "Отзывы", "Новости/Анонсы".
○	Форма подписки на email-рассылку.
●	Каталог курсов:
○	Фильтрация по направлениям, уровню сложности, языку.
○	Сортировка по популярности, цене, дате добавления.
○	Карточки курсов с названием, ценой, рейтингом и кнопкой "Подробнее".
●	Страница курса:
○	Полное описание: программа по модулям и урокам, для кого курс, преподаватели, формат, длительность.
○	Промо-видео курса.
○	Стоимость (с возможностью указания старой цены/скидки).
○	Блок с отзывами.
○	Кнопка "Купить курс" / "Записаться".
●	Статичные страницы: "О нас", "Контакты", "FAQ", "Политика конфиденциальности", "Пользовательское соглашение".
4.3. Модуль "Личный кабинет студента"
●	Регистрация/Авторизация: Email+пароль, через соцсети (Google, VK, Яндекс).
●	Профиль:
○	Редактирование личных данных (имя, аватар, пароль).
○	Настройки уведомлений (email, push).
●	Мои курсы:
○	Отображение купленных курсов с указанием прогресса прохождения в %.
○	Доступ к материалам курса.
●	Процесс обучения:
○	Интерфейс урока с видеоплеером, текстовым описанием, прикрепленными файлами (PDF, архивы).
○	Навигация по модулям и урокам.
○	Секция для сдачи домашнего задания (загрузка файла, текстовое поле).
○	Прохождение тестов и просмотр результатов.
●	История платежей: Список всех транзакций.
●	Сертификаты: Возможность скачать полученные сертификаты в PDF.
4.4. Модуль "Административная панель (CMS/LMS)"
●	Дашборд: Ключевые метрики (количество студентов, продажи за период, активность).
●	Управление курсами:
○	CRUD (Create, Read, Update, Delete) для курсов, модулей, уроков.
○	Конструктор уроков (текстовый редактор, загрузка видео, прикрепление файлов).
○	Конструктор тестов с разными типами вопросов (один выбор, несколько, открытый ответ).
●	Управление пользователями:
○	Просмотр списка всех пользователей, поиск, фильтрация.
○	Назначение ролей (студент, преподаватель, администратор).
○	Просмотр прогресса любого студента.
○	Возможность ручного зачисления на курс.
●	Управление контентом сайта: Редактирование статичных страниц, новостей, отзывов.
●	Финансы: Просмотр всех транзакций, статусов оплат, управление возвратами.
4.5. Модуль "Интеграция с AI"
●	AI-ассистент (Чат-бот):
○	Окно чата, доступное на всех страницах личного кабинета.
○	Работает на базе OpenAI API (GPT-4/GPT-3.5-Turbo).
○	Отвечает на частые вопросы (FAQ) на основе базы знаний.
○	Способен эскалировать сложный диалог на живого оператора (создает тикет в системе поддержки).
●	Генерация контента:
○	В админ. панели интерфейс для преподавателей/админов.
○	Пользователь вводит тему, ключевые слова, целевую аудиторию.
○	AI генерирует: структуру урока, текстовый материал для урока, вопросы для теста.
○	Важно: Сгенерированный контент должен быть доступен для редактирования и утверждения человеком перед публикацией.
●	Персонализация (поведенческий анализ):
○	Система собирает данные о просмотренных курсах, результатах тестов, поисковых запросах.
○	На основе этих данных на главной странице и в личном кабинете формируется блок "Вам может быть интересно".
●	Автоматическая проверка ДЗ (продвинутый функционал):
○	Для заданий с текстовым ответом используется NLP-модель (Natural Language Processing) для предварительной оценки по заданным критериям (ключевые слова, структура).
○	Итоговая оценка остается за преподавателем, но AI дает предварительный фидбэк и оценку.
4.6. Интеграции со сторонними сервисами
●	Платежные системы: Robokassa, CloudPayments, Stripe (все три должны быть интегрированы для выбора).
●	Вебинары: Zoom / Jitsi Meet. В админ. панели — создание вебинара и автоматическая генерация ссылки. В личном кабинете студента — расписание и кнопка для подключения.
●	Email-рассылки: SendGrid, Sendinblue или аналоги.
●	Аналитика: Google Analytics, Яндекс.Метрика.
5. Этапы разработки и сроки
Проект разделен на 5 этапов. Общий срок выполнения: не более 10 недель с 10 июля 2025 г.
Этап 1: MVP и базовый каркас (3 недели)
●	Цель: Запустить базовую платформу для регистрации и авторизации.
●	Результат:
1.	Развернута инфраструктура (хостинг, БД, CI/CD).
2.	Готов лендинг с описанием школы и формой подписки.
3.	Реализована регистрация/авторизация (email+пароль).
4.	Создан пустой, но функциональный личный кабинет (профиль, редактирование данных, выход).
5.	Сайт адаптирован под мобильные устройства и основные браузеры.
6.	Проведены базовые тесты.
Этап 2: LMS (4 недели)
●	Цель: Реализовать ядро системы управления обучением.
●	Результат:
1.	Админ-панель для CRUD курсов, модулей, уроков (текст, видео, файлы).
2.	Админ-панель для создания тестов.
3.	Интерфейс прохождения курса для студента.
4.	Автоматическая проверка тестов и отображение результатов.
5.	Трекинг прогресса студента.
6.	Реализованы роли: Студент, Администратор, Преподаватель.
7.	Интеграция с сервисом вебинаров (создание и отображение ссылок).
Этап 3: AI-интеграции (2 недели)
●	Цель: Внедрить базовые функции на основе AI.
●	Результат:
1.	Интегрирован чат-бот поддержки на базе OpenAI API.
2.	В админ. панели реализован функционал генерации текстов уроков и тестов по запросу.
3.	Настроен сбор данных для будущего модуля рекомендаций.
Этап 4: Платежи и Безопасность (1 неделя)
●	Цель: Подключить оплату и усилить безопасность.
●	Результат:
1.	Интегрированы платежные шлюзы Robokassa, CloudPayments, Stripe.
2.	Реализован процесс покупки курса и предоставления доступа после успешной оплаты.
3.	Настроена двухфакторная аутентификация (2FA).
4.	Проведен аудит безопасности, настроено шифрование паролей.
Этап 5: Финальное тестирование и оптимизация (1 неделя)
●	Цель: Отладка, оптимизация и подготовка к запуску.
●	Результат:
1.	Проведено нагрузочное тестирование.
2.	Исправлены все критические и мажорные баги.
3.	Проведена оптимизация скорости загрузки страниц.
4.	Подготовлена пользовательская документация для администратора.
5.	Проведено обучение администратора платформы.
6. Критерии приёмки
●	Проект считается выполненным после успешного завершения всех 5 этапов.
●	Функционал полностью соответствует описанному в данном ТЗ.
●	Отсутствуют критические ошибки, блокирующие основной пользовательский сценарий (регистрация -> покупка -> обучение).
●	Платформа выдерживает заявленную нагрузку.
●	Код проекта передан Заказчику вместе со всей документацией.
7. Особые условия
●	Права на код: Все интеллектуальные права на разработанный программный код и дизайн переходят к Заказчику после полной оплаты работ.
●	Конфиденциальность: Исполнитель обязуется не разглашать коммерческую и техническую информацию о проекте.
●	Поддержка: Условия пост-релизной поддержки (исправление багов) обсуждаются отдельно, но Исполнитель обязан устранять критические замечания, выявленные в течение 3 рабочих дней после уведомления в рамках гарантийного периода (например, 1 месяц).
●	Коммуникация: Еженедельные отчеты о проделанной работе и демонстрация результатов в конце каждого этапа. Все значимые изменения и дополнения к ТЗ должны быть согласованы обеими сторонами в письменном виде.